[
    {
        "instruction": "Write a Python function that calculates the total number of books on a bookshelf with `n` shelves, each containing `m` books. The twist: the number of rows per shelf follows the factorial pattern, where each row has one more book than the previous one. For example, if there are 3! = 1 \u00d7 2 \u00d7 3 = 6 rows on a shelf, and each row has m books, then the total number of books is `factorial(m)` times m.\n\nConsider the following inputs:\n- n = 4 (number of shelves)\n- m = 5 (books per shelf)\n\nHow would you calculate the total number of books on this bookshelf using Python?",
        "output": "def factorial(number):\n    fact = 1\n    for i in range(1, number + 1):\n        fact = fact * i\n    return fact"
    },
    {
        "instruction": "As a data analyst at a popular online shopping platform, you're tasked with developing a program to determine whether a customer's order total is even or odd and also calculate the total amount of sales tax for an order. Write a Python code that takes two integers as input (the order total and the tax rate) and prints out \"Even\" if the order total is divisible by 2, \"Odd\" otherwise, along with the calculated total amount of sales tax.",
        "output": "def is_even(number):\n    if number % 2 == 0:\n        return True\n    else:\n        return False"
    },
    {
        "instruction": "As a data analyst for a popular online fashion retailer, you have identified the most profitable days in the month as part of your task. Now, you need to analyze these profitable days further by determining which categories of products contributed the most to their sales revenue. How would you extract and display this information from the sorted list of daily sales figures?",
        "output": "The list of integer numbers can be sorted in descending order using the Python's list sorting method: numbers.sort(reverse=True)."
    }
]