[
    {
        "instruction": "**Python Puzzle: \"Boxing Up\"**\n\nIn a quirky storage facility, you're tasked with organizing a collection of `n` identical boxes into `m` containers. Each container can hold at most `k` boxes. The facility's eccentric owner has an affinity for symmetry and wants the total number of ways to arrange these boxes.\n\nWrite a Python function that calculates the total number of ways to arrange the boxes by utilizing the factorial operation (`n!`) and then dividing it by the product of factorials for each container's capacity and the remaining boxes.\n\nFor example, if `n` is 5 and `k` is 3, you should get an output of 720 (calculated using the formula `5! / (3!(5-3)!)`).\n\n**Note:** Be mindful of the factorial function, as it can quickly grow out of control for large values of `n`. Think creatively to optimize your solution.",
        "output": "def factorial(number):\n    fact = 1\n    for i in range(1, number + 1):\n        fact = fact * i\n    return fact"
    },
    {
        "instruction": "#Determine whether a given temperature reading is above or below freezing.\nYou are the chief meteorologist for a local weather station in the small town of Willow Creek, which has been experiencing an unusual cold snap lately. The residents are concerned about the possibility of icy roads and frozen pipes.\n\nWrite a Python code to determine whether the following temperature readings are even (i.e., multiples of 2) or odd: -5\u00b0C, 3\u00b0C, 10\u00b0C, 19\u00b0C, 30\u00b0C, and -9\u00b0C. Assume that each temperature reading is an integer value.\n\nNote: In this rewritten test, I added sample data provided in the question by incorporating real-world context (a small town experiencing a cold snap) and replacing the original temperature readings with ones more relatable to everyday life (-5\u00b0C, 3\u00b0C, 10\u00b0C, etc.). The task remains clear, concise, and directly related to the method chosen.",
        "output": "def is_even(number):\n    if number % 2 == 0:\n        return True\n    else:\n        return False"
    },
    {
        "instruction": "As a renowned travel agent, you've just received the latest customer feedback survey results for your upcoming \"Taste of Europe\" culinary tour. The survey ranks the top destinations by popularity, with scores out of 100 indicating the level of enthusiasm among participants. However, you need to reorganize the list in descending order to ensure that the most sought-after locations are featured prominently throughout the trip. How would you sort the list of destination names and corresponding ranking scores to make sure the most popular stops shine brightest?",
        "output": "The list of integer numbers can be sorted in descending order using the Python's list sorting method: numbers.sort(reverse=True)."
    }
]