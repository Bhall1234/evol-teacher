{
    "tasks": [
        {
            "task_id": 1,
            "task_name": "Task 1: Display User Info",
            "task_description": "This task requires you to display a user's name and age in a sentence. You'll write a Python program that constructs and prints a message that says 'My name is [name] and I am [age] years old.'.",
            "incorrect_code": "name = John\nage = 25\nprint(My name is name and I am age years old)",
            "correct_code": "name = 'John'\nage = 25\nprint(f'My name is {name} and I am {age} years old.')",
            "description": "The incorrect code lacks proper string formatting and does not enclose the string literals in quotes.",
            "explanation": "In Python, strings must be enclosed in quotes, and variables can be included in strings using f-strings or the `.format()` method.",
            "expected_output": "My name is John and I am 25 years old.",
            "reflection_question": "Why is it important to correctly format strings in Python, and how does using f-strings or the `.format()` method improve your code?"
        },
        {
            "task_id": 2,
            "task_name": "Task 2: Circle Area Calculation",
            "task_description": "This task introduces you to basic math operations in Python by calculating the area of a circle. You'll write a Python program that computes and prints the area of a circle given a radius.",
            "incorrect_code": "radius = 7\narea = 3.14 * radius ^ 2\nprint('The area of the circle is' + area)",
            "correct_code": "radius = 7\narea = 3.14 * radius ** 2\nprint(f'The area of the circle is {area}')",
            "description": "The incorrect code uses the `^` operator instead of `**` for exponentiation and concatenates a string with a number directly, which is not allowed in Python.",
            "explanation": "In Python, exponentiation is done using `**`, and numbers should be converted to strings or formatted correctly before being concatenated with strings.",
            "expected_output": "The area of the circle is 153.86",
            "reflection_question": "What mistakes might occur when calculating mathematical expressions in Python, and why is correct operator usage important?"
        },
        {
            "task_id": 3,
            "task_name": "Task 3: Temperature Converter",
            "task_description": "This task involves writing a program that converts a temperature from Fahrenheit to Celsius. You'll write a Python program that takes a Fahrenheit temperature, converts it to Celsius, and prints the result.",
            "incorrect_code": "fahrenheit = 95\ncelsius = (fahrenheit - 32) * 5 / 9\nprint('Temperature in Celsius: ' + celsius)",
            "correct_code": "fahrenheit = 95\ncelsius = (fahrenheit - 32) * 5 / 9\nprint(f'Temperature in Celsius: {celsius}')",
            "description": "The incorrect code tries to concatenate a string with a float directly, which is not allowed. It also does not format the output properly.",
            "explanation": "In Python, to combine strings and numbers in a print statement, you should use f-strings, the `str()` function, or `.format()` method.",
            "expected_output": "Temperature in Celsius: 35.0",
            "reflection_question": "Why is it important to correctly handle data types in Python, especially when performing arithmetic operations and printing results?"
        },
        {
            "task_id": 4,
            "task_name": "Task 4: List Operations",
            "task_description": "This task introduces you to basic operations with lists in Python. You'll write a Python program that performs several operations on a list of numbers and prints the results.",
            "incorrect_code": "numbers = [1, 2, 3, 4, 5]\nadd = numbers plus [6]\nremove = numbers remove 1\nreverse = numbers reverse\nprint(add, remove, reverse)",
            "correct_code": "numbers = [1, 2, 3, 4, 5]\nnumbers.append(6)\nnumbers.remove(1)\nnumbers.reverse()\nprint(numbers)",
            "description": "The incorrect code uses non-Pythonic syntax for list operations like addition, removal, and reversal.",
            "explanation": "In Python, list operations are performed using methods like `append()`, `remove()`, and `reverse()`. These methods modify the list in place.",
            "expected_output": "[6, 5, 4, 3, 2]",
            "reflection_question": "How does understanding list operations in Python help you manipulate and manage data efficiently in your programs?"
        }
    ]
}
